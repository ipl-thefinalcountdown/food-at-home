upstream webapp {
    server unix://{{ webapp_socket }};
}


server {
    listen       80;
    listen       [::]:80;
    server_name  {{ webapp_domain }};

    access_log   /var/log/nginx/{{ webapp_domain }}/access.log main;
    error_log    /var/log/nginx/{{ webapp_domain }}/error.log;

    include snippets/letsencrypt.conf;

    location / {
        rewrite ^(.*) https://{{ webapp_domain }}$1 permanent;
    }
}

server {
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  {{ webapp_domain }};

    access_log   /var/log/nginx/{{ webapp_domain }}/access.log main;
    error_log    /var/log/nginx/{{ webapp_domain }}/error.log;

    ssl_certificate      /etc/letsencrypt/live/{{ webapp_domain }}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/{{ webapp_domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ webapp_domain }}/chain.pem;

    root    {{ webapp_dir }}/web/html;
    index   index.php;

    location ~ ^/[^/]+\.php($|/) {
        fastcgi_pass   webapp;
        fastcgi_index  index.php;
        fastcgi_split_path_info ^(/[^/]+\.php)(/.*)$;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  HTTPS            on;
        include        fastcgi_params;

        # Cache PHP Requests
        #fastcgi_cache webapp;
        #fastcgi_cache_valid 200 5m;
        #add_header X-Cache $upstream_cache_status;

        # Required for caching to work
        #fastcgi_ignore_headers "Cache-Control" "Expires" "Set-Cookie";

        # Only apply cache when set
        #fastcgi_cache_bypass $no_cache;
        #fastcgi_no_cache $no_cache;
    }

    # directories for static assets
    location ~ ^/(?:css|js|images)/ {
        expires 30d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location ~ .* {
        rewrite ^/(.*)$ /index.php/$1 last;
    }
}
